<!--
//*********************************************************
//
// Copyright (c) Microsoft. All rights reserved.
// This code is licensed under the MIT License (MIT).
// THIS CODE IS PROVIDED *AS IS* WITHOUT WARRANTY OF
// ANY KIND, EITHER EXPRESS OR IMPLIED, INCLUDING ANY
// IMPLIED WARRANTIES OF FITNESS FOR A PARTICULAR
// PURPOSE, MERCHANTABILITY, OR NON-INFRINGEMENT.
//
//*********************************************************
-->
<Page
    x:Class="VAGino.SnifferPage"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="using:VAGino"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
    xmlns:controls="using:Microsoft.Toolkit.Uwp.UI.Controls" 
    xmlns:telerikGrid="using:Telerik.UI.Xaml.Controls.Grid"
    mc:Ignorable="d">
    <Page.Resources>
        <SymbolIconSource x:Key="DeleteIcon" Symbol="Delete"/>


        <SwipeItems x:Key="ExecuteDelete" Mode="Execute">
            <SwipeItem Text="Delete" IconSource="{StaticResource DeleteIcon}"
               Background="Red" Invoked="OnDeleteFilter"/>
        </SwipeItems>

        <CollectionViewSource x:Name="MessageGroups"
                              x:Key="MessageGroups"
                              IsSourceGrouped="True"
                              Source="{x:Bind ViewModel.Messages, Mode=OneWay}"/>        
        <Style TargetType="Button"
               x:Key="VAGinoButtonStyle"
               BasedOn="{StaticResource ButtonRevealStyle}">
            <Setter Property="Margin" Value="0,8"/>
        </Style>
        <Style TargetType="StackPanel"
               x:Key="VAGinoStackPanel">
            <Setter Property="Margin" Value="8"/>
            <Setter Property="Padding" Value="7"/>
            <Setter Property="BorderBrush" Value="Blue"/>
            <Setter Property="BorderThickness" Value="1"/>
        </Style>
        <Style TargetType="RelativePanel"
               x:Key="VAGinoRelativePanel">
            <Setter Property="Margin" Value="8"/>
            <Setter Property="Padding" Value="7"/>
            <Setter Property="BorderBrush" Value="Blue"/>
            <Setter Property="BorderThickness" Value="1"/>
        </Style>
    </Page.Resources>
    <Page.TopAppBar>
        <CommandBar VerticalAlignment="Top" Background="{StaticResource SystemControlAcrylicWindowBrush}">
            <AppBarButton Icon="Play" Label="Connect" Command="{x:Bind ViewModel.ConnectCommand, Mode=OneWay}"/>
            <AppBarButton Icon="Stop" Label="Disconnect" Command="{x:Bind ViewModel.DisconnectCommand, Mode=OneWay}"/>
            <AppBarSeparator/>
            <AppBarButton Icon="Delete" Label="Clear list" Click="{x:Bind DeleteAllGroups}"/>
            <AppBarButton Icon="Filter" Label="Clear list and filter new" Click="{x:Bind FilterNew}"/>
            <AppBarButton Icon="Clear" Label="Clear all history" Click="{x:Bind ClearList}"/>

            <!--<AppBarToggleButton Icon="Shuffle" Label="Shuffle" Click="AppBarButton_Click" />-->
            <AppBarSeparator/>
            <AppBarButton Icon="Refresh" Label="Update data" Command="{x:Bind ViewModel.UpdateDataCommand, Mode=OneWay}"/>
            <!--<AppBarButton Icon="Back" Label="Back" Click="AppBarButton_Click"/>
            <AppBarButton Icon="Forward" Label="Forward" Click="AppBarButton_Click"/>-->

            <CommandBar.SecondaryCommands>
                <!--<AppBarButton Label="Like" Click="AppBarButton_Click"/>
                <AppBarButton Label="Dislike" Click="AppBarButton_Click"/>-->
            </CommandBar.SecondaryCommands>

            <CommandBar.Content>
                <TextBlock Text="{x:Bind ViewModel.StatusText, Mode=OneWay}" Margin="12,14"/>
            </CommandBar.Content>
        </CommandBar>
    </Page.TopAppBar>
    <Grid VerticalAlignment="Stretch">
        <VisualStateManager.VisualStateGroups>
            <VisualStateGroup>
                <VisualState>
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="867" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="dataGrid.UserEditMode" Value="Inline"/>
                        <Setter Target="clearButton.Content">
                            <Setter.Value>
                                <TextBlock>
                                    <Run FontWeight="Bold" FontFamily="Segoe UI Symbol">
                                        &#xE0A4;
                                    </Run>
                                    <Run/>
                                    <Run FontWeight="Normal">
                                         Clear Filter
                                    </Run>
                                </TextBlock>
                            </Setter.Value>
                        </Setter>
                    </VisualState.Setters>
                </VisualState>
                <VisualState>
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="0" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="dataGrid.UserEditMode" Value="External"/>
                        <Setter Target="clearButton.Content">
                            <Setter.Value>
                                <TextBlock>
                                    <Run FontWeight="Bold" FontFamily="Segoe UI Symbol">
                                        &#xE0A4;
                                    </Run>
                                </TextBlock>
                            </Setter.Value>
                        </Setter>
                    </VisualState.Setters>
                </VisualState>
            </VisualStateGroup>
        </VisualStateManager.VisualStateGroups>

        <Grid VerticalAlignment="Stretch"
              Margin="12,10,12,12">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="*"/>
                <RowDefinition Height="Auto"/>
            </Grid.RowDefinitions>

            <Grid x:Name="GridMain" 
                  DataContext="{x:Bind ViewModel}"
                  VerticalAlignment="Stretch"
                  Grid.Row="1"                      
                  Margin="5">
                <Grid.RowDefinitions>
                    <RowDefinition Height="*"/>
                    <RowDefinition Height="50"/>
                    <RowDefinition Height="Auto"/>
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="200"/>
                    <ColumnDefinition Width="200"/>
                </Grid.ColumnDefinitions>
                <Grid  BorderBrush="Blue"
                       BorderThickness="1"
                       Margin="8"
                       Padding="7">
                <Grid.RowDefinitions>
                    <RowDefinition Height="55"/>
                    <RowDefinition/>
                </Grid.RowDefinitions>
                    <Border BorderBrush="Gray" 
                            BorderThickness="1">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="135"/>
                                <ColumnDefinition Width="2*"/>
                                <ColumnDefinition MaxWidth="130"/>
                            </Grid.ColumnDefinitions>
                            <ComboBox x:Name="selectedColumnList" SelectionChanged="selectedColumnList_SelectionChanged" ItemsSource="{Binding Columns, ElementName=dataGrid}" Margin="5 10 0 10" BorderThickness="0">
                                <ComboBox.ItemTemplate>
                                    <DataTemplate>
                                        <TextBlock Text="{Binding Header}"/>
                                    </DataTemplate>
                                </ComboBox.ItemTemplate>
                            </ComboBox>
                            <TextBox Grid.Column="1" x:Name="FilterText" HorizontalAlignment="Stretch" Margin="0 10 0 10" TextChanged="TextBox_TextChanged" IsTextPredictionEnabled="False"/>
                            <Button Grid.Column="2" BorderThickness="0" Click="Button_Click" VerticalAlignment="Stretch" Margin="8" HorizontalAlignment="Right" x:Name="clearButton">

                            </Button>
                        </Grid>
                    </Border>
                    <telerikGrid:RadDataGrid  
                                 Grid.Row="1"
                                 x:Name="dataGrid" 
                                 UserFilterMode="Disabled"      
                                 AutoGenerateColumns="False"                                
                                 ItemsSource="{x:Bind ViewModel.Messages}"
                                 FontSize="{StaticResource ControlContentThemeFontSize}">
                                <telerikGrid:RadDataGrid.Columns>
                                    <telerikGrid:DataGridTextColumn PropertyName="Count" Header="Count"/>
                                    <telerikGrid:DataGridTextColumn PropertyName="Id" Header="ID"/>
                                    <telerikGrid:DataGridTextColumn PropertyName="DLC" Header="DLC"/>
                                    <telerikGrid:DataGridTextColumn PropertyName="Data" Header="Data"/>
                                </telerikGrid:RadDataGrid.Columns>
                            </telerikGrid:RadDataGrid>
                </Grid>   
                <RelativePanel x:Name="RelativePanelFilters"
                               Grid.Column="1"
                               Grid.RowSpan="3" 
                               Style="{ThemeResource VAGinoRelativePanel}">
                    <TextBlock x:Name="TextBlockFilter" 
                        Text="Filters"
                               FontSize="21"
                               Margin="0,5"
                               RelativePanel.AlignTopWithPanel="True"
                               RelativePanel.AlignLeftWithPanel="True"
                               RelativePanel.AlignRightWithPanel="True"/>
                    <Button x:Name="BtnAddFilter" 
                            Command="{x:Bind ViewModel.AddFilterCommand, Mode=OneWay}"
                            Style="{ThemeResource VAGinoButtonStyle}"
                            RelativePanel.AlignBottomWithPanel="True"
                            RelativePanel.AlignHorizontalCenterWithPanel="True"
                            Content="Add filter"         
                        CommandParameter="{Binding Text, ElementName=TBFilter}"/>
                    <TextBox x:Name="TBFilter"
                             Margin="0,8"
                             RelativePanel.AlignLeftWith="TextBlockFilter"
                             RelativePanel.AlignRightWith="TextBlockFilter"
                             RelativePanel.Above="BtnAddFilter"
                         KeyDown="OnTBFilterKeyDown"/>

                    <ListView x:Name="ListViewFilters"
                              Margin="0,8"
                          ItemsSource="{x:Bind ViewModel.Filters}"
                              RelativePanel.AlignLeftWith="TextBlockFilter"
                              RelativePanel.AlignRightWith="TextBlockFilter"
                              RelativePanel.Above="TBFilter"
                              RelativePanel.Below="TextBlockFilter">
                        <ListView.ItemTemplate>
                            <DataTemplate x:DataType="x:String">
                                <SwipeControl x:Name="ListViewSwipeContainer"
                                              IsRightTapEnabled="True"
                                              RightTapped="ListViewSwipeContainer_RightTapped"
                          RightItems="{StaticResource ExecuteDelete}"
                          Height="30">
                                    <TextBlock Text="{x:Bind}"                                            
                                           FontSize="18"/>
                                </SwipeControl>
                            </DataTemplate>
                        </ListView.ItemTemplate>
                    </ListView>
                </RelativePanel>

                <StackPanel Orientation="Vertical"
                            Style="{ThemeResource VAGinoStackPanel}"
                            Grid.Row="0" 
                            Grid.Column="2">
                    <TextBlock x:Name="TBBatteryLevel"
                               FontSize="24"
                               FontWeight="Bold">
                        <Run Text="Battery"/>
                        <Run x:Name="TBBatteryLevelValue" Text="{x:Bind ViewModel.BatteryLevel, Mode=OneWay}"/>
                        <Run Text="%"/>
                    </TextBlock>
                </StackPanel>
                <StackPanel x:Name="stackPanelButtons" 
                            Grid.Row="2"
                            Grid.Column="2"
                            Style="{ThemeResource VAGinoStackPanel}">
                    <Button x:Name="BtnLFWU"
                            Style="{ThemeResource VAGinoButtonStyle}"
                            HorizontalAlignment="Center"
                            Command="{x:Bind ViewModel.SendRawCommand}"
                            CommandParameter="LFWU:5"
                            Content="LFW UP"/>
                    <Button x:Name="btnLFWD"
                            Style="{ThemeResource VAGinoButtonStyle}"
                            HorizontalAlignment="Center"
                            Command="{x:Bind ViewModel.SendRawCommand, Mode=OneWay}"
                            CommandParameter="LFWD:5"
                            Content="LFW Down"/>
                </StackPanel>
                <RelativePanel  x:Name="RelativePanelConsole"
                                Grid.Row="1"
                                Grid.RowSpan="2"
                                MaxHeight="170"
                                Style="{ThemeResource VAGinoRelativePanel}">
                    <TextBox x:Name="TBCommand"
                             RelativePanel.AlignLeftWithPanel="True"
                             RelativePanel.AlignRightWithPanel="True"
                             Margin="0,0,105,5"
                                 />
                    <Button x:Name="BTNCommand"
                            RelativePanel.AlignRightWithPanel="True"
                            Width="100"
                            Margin="0,0,0,5"
                            Style="{ThemeResource VAGinoButtonStyle}"
                            Content="Send"
                            Command="{x:Bind ViewModel.SendRawCommand}"
                            CommandParameter="{Binding Text, ElementName=TBCommand}"
                            />

                    <ListBox x:Name="listBoxConsole"
                             ItemsSource="{x:Bind ViewModel.LogLines}"
                             FontSize="12"
                             RelativePanel.Below="TBCommand"
                                  Background="Black"
                                  RelativePanel.AlignLeftWithPanel="True"
                                  RelativePanel.AlignRightWithPanel="True"
                                  RelativePanel.AlignBottomWithPanel="True">
                        
                    </ListBox>

                    <!--<ScrollViewer x:Name="SVConsole"
                                  MinHeight="100"
                                  RelativePanel.Below="TBCommand"
                                  Background="Black"
                                  RelativePanel.AlignLeftWithPanel="True"
                                  RelativePanel.AlignRightWithPanel="True"
                                  RelativePanel.AlignBottomWithPanel="True"
                                  VerticalAlignment="Stretch"
                                  HorizontalAlignment="Stretch"
                                  >
                        <RichTextBlock x:Name="RTBConsole"                    
                              Margin="5,5"
                                       HorizontalAlignment="Stretch"                                       
                                       VerticalAlignment="Stretch"
                                       Width="500"/>
                    </ScrollViewer>-->

                </RelativePanel>
            </Grid>

            <!-- Status Block for providing messages to the user.  Use the
             NotifyUser() method to populate the message -->
            <TextBlock x:Name="StatusBlock" 
                       Grid.Row="4" 
                       Margin="5" 
                       Visibility="Collapsed"/>
        </Grid>
    </Grid>
</Page>

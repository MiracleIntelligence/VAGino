<!--
//*********************************************************
//
// Copyright (c) Microsoft. All rights reserved.
// This code is licensed under the MIT License (MIT).
// THIS CODE IS PROVIDED *AS IS* WITHOUT WARRANTY OF
// ANY KIND, EITHER EXPRESS OR IMPLIED, INCLUDING ANY
// IMPLIED WARRANTIES OF FITNESS FOR A PARTICULAR
// PURPOSE, MERCHANTABILITY, OR NON-INFRINGEMENT.
//
//*********************************************************
-->
<Page
    x:Class="SerialArduino.Scenario4_Jetta"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="using:SerialArduino"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    mc:Ignorable="d">

    <Grid Background="{ThemeResource ApplicationPageBackgroundThemeBrush}">
        <Grid Background="{ThemeResource ApplicationPageBackgroundThemeBrush}" Margin="12,20,12,12">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="*"/>
                <RowDefinition Height="Auto"/>
            </Grid.RowDefinitions>
            <StackPanel Margin="0,0,0,10">
                <TextBlock Text="CAN for Jetta" Style="{StaticResource SampleHeaderTextStyle}"/>
            </StackPanel>

            <Grid x:Name="LEDTempScrollViewer" 
                  VerticalAlignment="Stretch"
                  Grid.Row="1"                      
                  Margin="0,0,0,100">
                <Grid.RowDefinitions>
                    <RowDefinition Height="400"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="*"/>
                    <RowDefinition Height="Auto"/>
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="Auto"/>
                </Grid.ColumnDefinitions>
                <ListView x:Name="LVMessages">
                    <ListView.ItemTemplate>
                        <DataTemplate>
                            <StackPanel Orientation="Horizontal">
                                <TextBlock Text="{Binding Count}"
                                           Width="35"/>
                                <TextBlock Text="{Binding Name}"
                                           Width="100"/>
                                <TextBlock Text="{Binding Message}"
                                           Width="200"/>
                            </StackPanel>
                        </DataTemplate>
                    </ListView.ItemTemplate>
                </ListView>
                <StackPanel Orientation="Vertical" Grid.Row="0" Grid.Column="1"
                            Margin="5,0">
                    <Button x:Name="BtnUpdateData"
                            HorizontalAlignment="Stretch"
                            Margin="10"
                            Content="Update"
                            Click="UpdateData_Click"/>
                    <TextBlock x:Name="TBBatteryLevel"
                               FontSize="24"
                               FontWeight="Bold">
                        <Run Text="Battery"/>
                        <Run x:Name="TBBatteryLevelValue" Text="0"/>
                        <Run Text="%"/>
                    </TextBlock>
                    <Button x:Name="BtnLFWD"
                            HorizontalAlignment="Stretch"
                            Margin="10"
                            Content="LFW Down"
                            Click="LFWDown_Click"/>
                </StackPanel>
                <StackPanel Orientation="Horizontal" Margin="10,0,0,0" Grid.Row="1">
                    <Button x:Name="ClearButton" Content="Clear" Margin="10" 
                            Click="OnClearClick" VerticalAlignment="Bottom" HorizontalAlignment="Right"/>
                    <Button x:Name="Sort" Content="Sort" VerticalAlignment="Bottom" Margin="10" Click="OnSort"/>
                    <Button x:Name="TemperatureButton" Content="Start tracking" Margin="10" Click="OnStartTracking" VerticalAlignment="Bottom" HorizontalAlignment="Right"/>
                    <Button x:Name="StopButton" Content="Stop tracking" Margin="10" Click="OnStopTracking" VerticalAlignment="Bottom" HorizontalAlignment="Right"/>
                    <TextBox x:Name="TemperatureValue" Text="" Margin="10" VerticalAlignment="Bottom" HorizontalAlignment="Right"/>
                </StackPanel>

                <ScrollViewer x:Name="SVConsole"
                              VerticalAlignment="Stretch"
                              Grid.Row="2"
                              MinHeight="200"
                              Margin="5,5">
                    <RichTextBlock x:Name="RTBConsole"                                   
                                       HorizontalAlignment="Left"                                       
                                       VerticalAlignment="Stretch"
                                       Width="500"/>
                </ScrollViewer>
                <StackPanel Orientation="Horizontal"
                                    Grid.Row="3">
                    <TextBox x:Name="TBCommand"
                                     Width="200"
                                     HorizontalAlignment="Stretch"
                                 />
                    <Button x:Name="BTNCommand"
                                    Content="Send"
                                    Click="BTNCommand_Click"
                                    />
                </StackPanel>

                <!--</StackPanel>-->

            </Grid>

            <!-- Status Block for providing messages to the user.  Use the
             NotifyUser() method to populate the message -->
            <TextBlock x:Name="StatusBlock" Grid.Row="4" Margin="12, 10, 12, 10" Visibility="Collapsed"/>
        </Grid>
    </Grid>
</Page>
